<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sms.mapper.SmsInfoMapper">
	<parameterMap id="smsInfoParam" type="com.sms.bean.SmsInfo">
	</parameterMap>
	<resultMap id="smsInfoResult" type="com.sms.bean.SmsInfo">
		<id column="id" property="id"/>
		<result column="contact_id" property="contactId"/>
		<result column="contact_name" property="contactName"/>
		<result column="phone" property="phone"/>
		<result column="goods_id" property="goodsId"/>
		<result column="goods_name" property="goodsName"/>
		<result column="goods_model" property="goodsModel"/>
		<result column="update_date" property="updateDate"/>
		<result column="send_date" property="sendDate"/>
		<result column="sms_content" property="smsContent"/>
		<result column="done" property="done"/>
		<result column="sms_type" property="smsType"/>
	</resultMap>


	<insert id="createSmsInfo" parameterMap="smsInfoParam" useGeneratedKeys="true" keyProperty="id">
			INSERT INTO CI_SMS_INFO(contact_id,contact_name,phone,goods_id,goods_name,goods_model,update_date,send_date,sms_content,done,sms_type) VALUES
			(#{contactId},#{contactName},#{phone},#{goodsId},#{goodsName},#{goodsModel},#{updateDate},#{sendDate},#{smsContent},#{done},#{smsType})
	</insert>

	<update id="updateSmsInfo" parameterMap="smsInfoParam">
		UPDATE CI_SMS_INFO SET contact_id=#{contactId},contact_name=#{contactName},phone=#{phone},goods_id=#{goodsId},goods_name=#{goodsName},
		goods_model=#{goodsModel},update_date=#{updateDate},send_date=#{sendDate},sms_content=#{smsContent},done=#{done},
		sms_type=#{smsType} WHERE id=#{id}
	</update>
	<select id="querySmsInfo" parameterMap="smsInfoParam" resultMap="smsInfoResult">
		SELECT * FROM CI_SMS_INFO WHERE 1=1
		<include refid="conditionalQuery"/>
		<include refid="pagination"/>
	</select>
	<select id="querySmsInfoCount" parameterMap="smsInfoParam" resultType="int">
		SELECT COUNT(ID) FROM CI_SMS_INFO WHERE 1=1
		<include refid="conditionalQuery"/>
	</select>
	<select id="querySmsInfoById" parameterType="int" resultMap="smsInfoResult">
		SELECT * FROM CI_SMS_INFO WHERE id=#{id}
	</select>
	<delete id="deleteSmsInfo" parameterType="int">
		DELETE FROM CI_SMS_INFO WHERE ID=${id}
	</delete>

	<select id="queryUnsendInfo" parameterType="java.util.Date" resultMap="smsInfoResult">
		SELECT * FROM CI_SMS_INFO WHERE send_date&lt;=#{now} AND done=0
	</select>

	<sql id="conditionalQuery">
		<if test="smsInfo!=null">
			<if test="smsInfo.contactId!=null or smsInfo.contactName!=null or smsInfo.phone!=null or smsInfo.goodsId!=null or smsInfo.goodsName!=null or smsInfo.goodsModel!=null or smsInfo.smsContent!=null or smsInfo.done!=null or smsInfo.smsType!=null">
				AND (1=0 <include refid="smsInfoQuery"/>)
			</if>
		</if>
	</sql>
	<sql id="smsInfoQuery">
		<if test="smsInfo.contactId!=null">
			OR contact_id LIKE CONCAT('%', #{smsInfo.contactId}, '%')
		</if>
		<if test="smsInfo.contactName!=null">
			OR contact_name LIKE CONCAT('%', #{smsInfo.contactName}, '%')
		</if>
		<if test="smsInfo.phone!=null">
			OR phone LIKE CONCAT('%', #{smsInfo.phone}, '%')
		</if>
		<if test="smsInfo.goodsId!=null">
			OR goods_id LIKE CONCAT('%', #{smsInfo.goodsId}, '%')
		</if>
		<if test="smsInfo.goodsName!=null">
			OR goods_name LIKE CONCAT('%',#{smsInfo.goodsName}, '%')
		</if>
		<if test="smsInfo.goodsModel!=null">
			OR goods_model LIKE CONCAT('%',#{smsInfo.goodsModel}, '%')
		</if>
		<if test="smsInfo.smsContent!=null">
			OR sms_content LIKE CONCAT('%', #{smsInfo.smsContent}, '%')
		</if>
		<if test="smsInfo.done!=null">
			OR done LIKE CONCAT('%',#{smsInfo.done}, '%')
		</if>
		<if test="smsInfo.smsType!=null">
			OR sms_type LIKE CONCAT('%', #{smsInfo.smsType}, '%')
		</if>
	</sql>
	<sql id="pagination">
		<choose>
			<when test="pagination.sortFiledName != null">
				ORDER BY ${pagination.sortFiledName}
			</when>
			<otherwise>
				ORDER BY bill_date
			</otherwise>
		</choose>
		<choose>
			<when test="pagination.asc">
				ASC
			</when>
			<otherwise>
				DESC
			</otherwise>
		</choose>
		limit #{pagination.from},#{pagination.pageSize}
	</sql>

</mapper>
